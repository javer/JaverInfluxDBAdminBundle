name: Test

on:
    push:
    pull_request:
        types: [opened, synchronize, reopened]

jobs:
    test:
        name: PHP ${{ matrix.php-version }} + Symfony ${{ matrix.symfony-version }} + Sonata ${{ matrix.sonata-version }}

        runs-on: ubuntu-22.04

        continue-on-error: ${{ matrix.experimental }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '8.0'
                      symfony-version: '5.4.*'
                      sonata-version: '4.17.0'
                      experimental: false
                    - php-version: '8.1'
                      symfony-version: '5.4.*'
                      sonata-version: '4.17.0'
                      experimental: false
                    - php-version: '8.1'
                      symfony-version: '6.3.*'
                      sonata-version: '4.26.0'
                      experimental: false
                    - php-version: '8.2'
                      symfony-version: '5.4.*'
                      sonata-version: '4.17.0'
                      experimental: false
                    - php-version: '8.2'
                      symfony-version: '6.3.*'
                      sonata-version: '4.17.0'
                      experimental: false
                    - php-version: '8.2'
                      symfony-version: '6.3.*'
                      sonata-version: '4.26.0'
                      experimental: false

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  coverage: none
                  ini-values: "memory_limit=-1"
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2, cs2pr, flex

            - name: Validate composer.json
              run: composer validate --no-check-lock

            - name: Configure SonataAdminBundle version
              run: composer require --no-update sonata-project/admin-bundle "${{ matrix.sonata-version }}"

            - name: Install Composer dependencies
              uses: "ramsey/composer-install@v2"
              with:
                  composer-options: "--prefer-dist"
              env:
                  SYMFONY_REQUIRE: "${{ matrix.symfony-version }}"

            - name: Setup problem matchers for PHP
              run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

            - name: Lint PHP files
              run: find Builder Datagrid DependencyInjection Exporter FieldDescription Filter Model -name "*.php" -print0 | xargs -0 -n1 -P8 php -l

            - name: Validate code style
              run: vendor/bin/phpcs -q --report=checkstyle | cs2pr

            - name: PHPStan
              run: vendor/bin/phpstan analyse
